# Map branch names to ports
map $branch_name $backend_port {
    default 3000;  # Main site
    test-branch 3033;
    # Add more branches here as needed:
    # pr-500 3034;
    # feature-auth 3035;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name fringematrix.art www.fringematrix.art;
    return 301 https://$host$request_uri;
}

# Main HTTPS server
server {
    server_name fringematrix.art www.fringematrix.art; # managed by Certbot
    
    # Main site - everything goes to main backend
    location / {
        # Don't modify URLs for main site
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Branch sites - proxy everything to branch backend WITHOUT stripping prefix
    location ~ ^/([a-zA-Z0-9][a-zA-Z0-9_-]+)(/.*)?$ {
        set $branch_name $1;
        set $full_path $uri;
        
        # Map branch to port
        set $backend_port 3001;  # default fallback
        if ($branch_name = "test-branch") {
            set $backend_port 3033;
        }
        
        # Proxy the full URL (including branch prefix) to the backend
        # The backend should handle serving files relative to the branch
        proxy_pass http://127.0.0.1:$backend_port;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Branch-Name $branch_name;
        proxy_set_header X-Original-URI $full_path;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/fringematrix.art/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/fringematrix.art/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# Fallback HTTP server (managed by Certbot)
server {
    if ($host = www.fringematrix.art) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = fringematrix.art) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name fringematrix.art www.fringematrix.art;
    return 404; # managed by Certbot
}