# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name fringematrix.art www.fringematrix.art;
    return 301 https://$host$request_uri;
}

# Main HTTPS server with simple branch routing
server {
    server_name fringematrix.art www.fringematrix.art; # managed by Certbot
    
    # Document root points to the base deployment directory
    root /var/www/fringematrix;
    
    # Main site - serve static files directly, proxy API calls
    location / {
        # Try to serve static files from main/app/client/dist first
        try_files /main/app/client/dist$uri /main/app/client/dist$uri/ @main_backend;
    }
    
    location @main_backend {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Branch deployments - dynamic routing
    location ~ ^/([a-zA-Z0-9][a-zA-Z0-9_-]+)(/.*)?$ {
        set $branch $1;
        set $path $2;
        set $backend_port 3001;
        
        # Known branch mappings
        if ($branch = "test-branch") {
            set $backend_port 3033;
        }
        
        # Try to serve static files from branch directory first
        try_files /${branch}/app/client/dist$path /${branch}/app/client/dist$path/ @branch_backend;
        
        location @branch_backend {
            proxy_pass http://127.0.0.1:$backend_port$path;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Branch-Name $branch;
        }
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/fringematrix.art/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/fringematrix.art/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# Fallback HTTP server (managed by Certbot)
server {
    if ($host = www.fringematrix.art) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = fringematrix.art) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name fringematrix.art www.fringematrix.art;
    return 404; # managed by Certbot
}